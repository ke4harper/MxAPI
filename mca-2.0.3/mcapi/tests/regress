#!/usr/bin/env perl
# -- -*-perl-*-a
#

use strict;


use FindBin;
use lib "$FindBin::RealBin/../scripts";
use lib "$FindBin::RealBin/../share";
use Data::Dumper;
use File::Basename;
use rdriver;
use File::Temp "tempfile";
#use Math::BigInt lib => 'GMP';
use Cwd;

# these tests are all self checking
my @tests;

my $testdir = ".";
opendir(DIR,"$testdir") or die "unable to open $testdir\n";

my @test_list =  grep { $_ ne '.' and $_ ne '..' and ($_  =~ /(\S+)\.c$/) } readdir DIR;
close DIR;

create_tests();

sub create_tests {  
  sub make_test {
    my $t = shift;
    $t =~ s/\.c//;
    my $expected_rc = 0;
    next if ($t =~ /sig/); #signal handling tests are not reliably passing yet - looks like issue with TLS variables
    if ($t =~ /sig/) { $expected_rc = 999; }
    return {
						cmd => "./$t &> $t.out",
						stdio => 1,
						checker =>  sub { check_ipcclean(1) },
            stderr => 1,
            fail => $expected_rc,
            temps => ["core.*"],
	   };
  }
  
  foreach my $t (@test_list) {
    my %h;
    next if ($t =~ /sig3/);
    next if ($t =~ /mtapi_test3/); #we have a race condition in init/final that this test hits sometimes
                                   # when one thead completes and finalizes while the others are midway through mrapi_initialize
    push @tests,make_test($t);
  }
}

sub check_ipcclean {
	#print "checking ipcclean...\n";
  my $fail_on_error = shift;
  my @lines = `ipcs`;
  #foreach (@lines) { print "$_\n"; }
 
  @lines = `ipcclean`;
  foreach (@lines) {
     #print "$_\n";
    if (/resource\(s\) deleted/) {
      if ($fail_on_error) {
        print "$_\n";
        die "  Test FAILED: found unfreed resources - test did not clean up properly\n";
      } else {
				print "...previous test left unfreed resources.  cleaning up...\n";
			}
    }
  }
}
  













#-------------------------------------------------------------
# kick off the regression
#-------------------------------------------------------------
doTest(\@tests);

